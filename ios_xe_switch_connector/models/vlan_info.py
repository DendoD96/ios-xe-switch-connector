# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ios_xe_switch_connector.models.base_model_ import Model
from ios_xe_switch_connector import util


class VlanInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, vlan_number: int=None, interface_name: str=None):  # noqa: E501
        """VlanInfo - a model defined in Swagger

        :param vlan_number: The vlan_number of this VlanInfo.  # noqa: E501
        :type vlan_number: int
        :param interface_name: The interface_name of this VlanInfo.  # noqa: E501
        :type interface_name: str
        """
        self.swagger_types = {
            'vlan_number': int,
            'interface_name': str
        }

        self.attribute_map = {
            'vlan_number': 'vlan_number',
            'interface_name': 'interface_name'
        }
        self._vlan_number = vlan_number
        self._interface_name = interface_name

    @classmethod
    def from_dict(cls, dikt) -> 'VlanInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VlanInfo of this VlanInfo.  # noqa: E501
        :rtype: VlanInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vlan_number(self) -> int:
        """Gets the vlan_number of this VlanInfo.


        :return: The vlan_number of this VlanInfo.
        :rtype: int
        """
        return self._vlan_number

    @vlan_number.setter
    def vlan_number(self, vlan_number: int):
        """Sets the vlan_number of this VlanInfo.


        :param vlan_number: The vlan_number of this VlanInfo.
        :type vlan_number: int
        """
        if vlan_number is None:
            raise ValueError("Invalid value for `vlan_number`, must not be `None`")  # noqa: E501

        self._vlan_number = vlan_number

    @property
    def interface_name(self) -> str:
        """Gets the interface_name of this VlanInfo.


        :return: The interface_name of this VlanInfo.
        :rtype: str
        """
        return self._interface_name

    @interface_name.setter
    def interface_name(self, interface_name: str):
        """Sets the interface_name of this VlanInfo.


        :param interface_name: The interface_name of this VlanInfo.
        :type interface_name: str
        """
        if interface_name is None:
            raise ValueError("Invalid value for `interface_name`, must not be `None`")  # noqa: E501

        self._interface_name = interface_name
